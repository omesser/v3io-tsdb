name: CI

on:
  pull_request:
    branches:
    - development
    - 'v[0-9]+.[0-9]+.x'

  # Run CI also on push to master
  push:
    branches:
    - master

  release:
    types:
    - created

jobs:
  test:
    name: Lint & test
    runs-on: ubuntu-latest
    env:
      TSDB_TEST_TABLE_PATH: TSDB_INTEGRATION_TESTS/${{ github.sha }}

    steps:
    - name: Dump github context
      run: echo "$GITHUB_CONTEXT"
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}

    - name: Dump runner context
      run: echo "$RUNNER_CONTEXT"
      env:
        RUNNER_CONTEXT: ${{ toJson(runner) }}

    - name: Dump github ref
      run: echo "$GITHUB_REF"

    - uses: actions/setup-go@v2
      with:
        go-version: "^1.14.0"

    - uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - uses: actions/checkout@v2

    - name: Lint
      run: make lint

    - name: Test short
      run: make test

# Disabled until GH actions will have a solution to using secret on PR triggered workflows.
# Until then, this runs in travis
#    - name: Test integration
#      run: make integration
#      env:
#        V3IO_TSDB_CONFIG: ${{ github.workspace }}/test/ci_v3io.yaml
#
#    - name: Benchmark
#      run: make bench
#      env:
#        V3IO_TSDB_CONFIG: ${{ github.workspace }}/test/ci_v3io_bench.yaml
#        TSDB_BENCH_INGEST_CONFIG: ${{ github.workspace }}/test/benchmark/testdata/tsdb-bench-test-config-ci.yaml

  release:
    name: Release
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    needs:
    - test
    strategy:
      matrix:
        go-os:
        - linux
        - darwin
        - windows

    steps:
    - name: Dump GitHub context
      run: echo "$GITHUB_CONTEXT"
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}

    - name: Dump runner context
      run: echo "$RUNNER_CONTEXT"
      env:
        RUNNER_CONTEXT: ${{ toJson(runner) }}

    - name: Dump github ref
      run: echo "$GITHUB_REF"

    - name: Extract ref info
      id: release_info
      run: |
        echo ::set-output name=REF_BRANCH::${GITHUB_REF#refs/heads/}
        echo ::set-output name=REF_TAG::${GITHUB_REF#refs/tags/}

    - name: Set TSDB_LABEL to release tag
      run: |
        echo "::set-env name=TSDB_LABEL::${{ steps.release_info.outputs.REF_TAG }}"

    - uses: actions/checkout@v2

    - uses: actions/setup-go@v2
      with:
        go-version: "^1.14.0"

    - uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Build binaries for ${{ matrix.go-os }}
      run: make bin
      env:
        GOPATH: ${{ github.workspace }}/go
        GOARCH: amd64
        GOOS: ${{ matrix.go-os }}

    - name: Upload binaries
      uses: AButler/upload-release-assets@v2.0
      with:
        files: ${{ github.workspace }}/go/bin/tsdbctl-*
        repo-token: ${{ secrets.GITHUB_TOKEN }}
